import type { CreateConnectionAuthenticateRequired } from './CreateConnectionAuthenticateRequired';
import type { CreateConnectionAuthenticationProtocol } from './CreateConnectionAuthenticationProtocol';
import type { CreateConnectionAuthenticationType } from './CreateConnectionAuthenticationType';
import type { CreateConnectionCommunity } from './CreateConnectionCommunity';
/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * MonoWatch BackBone
 * MonoWatch Security Asset Management
 * OpenAPI spec version: 1.0.0
 */
import type { CreateConnectionDescription } from './CreateConnectionDescription';
import type { CreateConnectionPassphrase } from './CreateConnectionPassphrase';
import type { CreateConnectionPassword } from './CreateConnectionPassword';
import type { CreateConnectionPrivacyPassphrase } from './CreateConnectionPrivacyPassphrase';
import type { CreateConnectionPrivacyProtocol } from './CreateConnectionPrivacyProtocol';
import type { CreateConnectionPrivilegedAuthentication } from './CreateConnectionPrivilegedAuthentication';
import type { CreateConnectionPrivilegedPassword } from './CreateConnectionPrivilegedPassword';
import type { CreateConnectionSecurityLevel } from './CreateConnectionSecurityLevel';
import type { CreateConnectionSshKey } from './CreateConnectionSshKey';
import type { CreateConnectionUriQuery } from './CreateConnectionUriQuery';
import type { CreateConnectionUsername } from './CreateConnectionUsername';
import type { EachConnectionType } from './EachConnectionType';

export interface CreateConnection {
  name: string;
  description?: CreateConnectionDescription;
  type: EachConnectionType;
  port: number;
  authentication_type?: CreateConnectionAuthenticationType;
  authenticate_required?: CreateConnectionAuthenticateRequired;
  privileged_authentication?: CreateConnectionPrivilegedAuthentication;
  uri_query?: CreateConnectionUriQuery;
  username?: CreateConnectionUsername;
  password?: CreateConnectionPassword;
  privileged_password?: CreateConnectionPrivilegedPassword;
  security_level?: CreateConnectionSecurityLevel;
  authentication_protocol?: CreateConnectionAuthenticationProtocol;
  privacy_protocol?: CreateConnectionPrivacyProtocol;
  privacy_passphrase?: CreateConnectionPrivacyPassphrase;
  ssh_key?: CreateConnectionSshKey;
  passphrase?: CreateConnectionPassphrase;
  community?: CreateConnectionCommunity;
}
