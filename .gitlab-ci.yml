stages:
  - install_test
  - test
  - report
  - install
  - deploy

variables:
  DEPLOY_DIR: "/sources/app/dev/front"
  PLAYWRIGHT_BROWSERS_PATH: .playwright-browsers

default:
  image: mcr.microsoft.com/playwright:v1.54.1-jammy

cache:
  key: shared-playwright-cache
  paths:
    - .playwright-browsers

dev_test_pipeline:
  stage: install_test
  variables:
    PLAYWRIGHT_BROWSERS_PATH: .playwright-browsers
    BASE_URL: "http://172.31.100.57:8080"
    NEXTAUTH_URL: "http://172.31.100.57:4000"
    HOST_URL: "http://172.31.100.57:4000"
    NODE_TLS_REJECT_UNAUTHORIZED: "0"
    X_NONCE_AUTHENTICATE: "Ewi5To8Pf2rbIINNFp9i9g"
    CSRF_SECRET: "50FaWgdOhi9M9wyna8taR1k3ODOR8d6u"
    PORT: "4000"
    CI: "true"
  only:
    - develop
  tags:
    - docker
  script:
    - npm config set registry http://172.31.100.53/repository/npm-proxy/
    - rm -f package-lock.json; rm -f .npmrc; rm -rf node_modules
    - NODE_ENV=development npm install --force
    - NODE_ENV=production npm run build
    - npx playwright install chromium
    - NODE_ENV=production npx playwright test
  artifacts:
    when: always
    paths:
      - node_modules/
      - .next
      - public
      - test-results/
      - .playwright-browsers
    reports:
      junit: test-results/junit.xml
    expire_in: 1 hour
  allow_failure: true

upload_allure:
  stage: report
  only:
    - develop
  tags:
    - dev
  dependencies:
    - dev_test_pipeline
  script:
    - echo "$SSH_PRIVATE_KEY" > id_rsa
    - chmod 600 id_rsa
    - mkdir -p ~/.ssh
    - ssh-keyscan -H 172.31.100.98 >> ~/.ssh/known_hosts
    - scp -i id_rsa -r test-results/ root@172.31.100.98:/tmp/allure-results
    - ssh -i id_rsa root@172.31.100.98 'allure generate /tmp/allure-results -o /var/www/allure --clean'
  when: always



dev_pipeline:
  stage: install
  dependencies:
    - dev_test_pipeline
  variables:
    BASE_URL: "http://172.31.100.57:8080"
    NEXTAUTH_URL: "http://172.31.100.57:3000"
    HOST_URL: "http://172.31.100.57:3000"
    NODE_TLS_REJECT_UNAUTHORIZED: "0"
    X_NONCE_AUTHENTICATE: "Ewi5To8Pf2rbIINNFp9i9g"
    CSRF_SECRET: "50FaWgdOhi9M9wyna8taR1k3ODOR8d6u"
    PORT: "3000"
    CI: false
  only:
    - develop
  tags:
    - dev
  script:
    - NODE_ENV=production npm run build
  artifacts:
    paths:
      - .next/static
      - .next/standalone
      - public
    expire_in: 1 hour

dev_deploy:
  stage: deploy
  variables:
    NODE_ENV: "production"
  only:
    - develop
  tags:
    - dev
  script:
    - echo "Deploying with NODE_ENV=$NODE_ENV..."
    - mkdir -p $DEPLOY_DIR
    - cp -r .next $DEPLOY_DIR/
    - cp -r public $DEPLOY_DIR/
    - /bin/cp -rf $DEPLOY_DIR/.next/static/ $DEPLOY_DIR/.next/standalone/.next/
    - sudo systemctl restart front-dev
