/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * MonoWatch BackBone
 * MonoWatch Security Asset Management
 * OpenAPI spec version: 1.0.0
 */
import type { EachWorkflowPhaseId } from './EachWorkflowPhaseId';
import type { EachWorkflowPhaseName } from './EachWorkflowPhaseName';
import type { EachWorkflowPhaseMessage } from './EachWorkflowPhaseMessage';
import type { EachWorkflowPhaseDescription } from './EachWorkflowPhaseDescription';
import type { EachWorkflowPhaseDuration } from './EachWorkflowPhaseDuration';
import type { EachWorkflowPhaseStartTime } from './EachWorkflowPhaseStartTime';
import type { EachWorkflowPhaseEndTime } from './EachWorkflowPhaseEndTime';
import type { WorkFlowStatus } from './WorkFlowStatus';
import type { EachWorkflowPhaseProgress } from './EachWorkflowPhaseProgress';
import type { EachWorkflowPhaseCurrentProcessed } from './EachWorkflowPhaseCurrentProcessed';
import type { EachWorkflowPhaseTotalProcessing } from './EachWorkflowPhaseTotalProcessing';
import type { EachWorkflowPhaseProgressStatus } from './EachWorkflowPhaseProgressStatus';
import type { EachWorkflowPhaseSteps } from './EachWorkflowPhaseSteps';
import type { EachWorkflowPhaseCompletedCount } from './EachWorkflowPhaseCompletedCount';
import type { EachWorkflowPhaseFailedCount } from './EachWorkflowPhaseFailedCount';
import type { EachWorkflowPhasePendingCount } from './EachWorkflowPhasePendingCount';
import type { EachWorkflowPhaseInProgressCount } from './EachWorkflowPhaseInProgressCount';

export interface EachWorkflowPhase {
  id?: EachWorkflowPhaseId;
  name: EachWorkflowPhaseName;
  display_name: string;
  order: number;
  message?: EachWorkflowPhaseMessage;
  description?: EachWorkflowPhaseDescription;
  duration?: EachWorkflowPhaseDuration;
  start_time?: EachWorkflowPhaseStartTime;
  end_time?: EachWorkflowPhaseEndTime;
  status: WorkFlowStatus;
  progress?: EachWorkflowPhaseProgress;
  current_processed?: EachWorkflowPhaseCurrentProcessed;
  total_processing?: EachWorkflowPhaseTotalProcessing;
  progress_status?: EachWorkflowPhaseProgressStatus;
  steps?: EachWorkflowPhaseSteps;
  completed_count?: EachWorkflowPhaseCompletedCount;
  failed_count?: EachWorkflowPhaseFailedCount;
  pending_count?: EachWorkflowPhasePendingCount;
  in_progress_count?: EachWorkflowPhaseInProgressCount;
}
