import type { EachConnectionAuthenticateRequired } from './EachConnectionAuthenticateRequired';
import type { EachConnectionAuthenticationProtocol } from './EachConnectionAuthenticationProtocol';
import type { EachConnectionAuthenticationTypeProperty } from './EachConnectionAuthenticationTypeProperty';
/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * MonoWatch BackBone
 * MonoWatch Security Asset Management
 * OpenAPI spec version: 1.0.0
 */
import type { EachConnectionDescription } from './EachConnectionDescription';
import type { EachConnectionPassword } from './EachConnectionPassword';
import type { EachConnectionPort } from './EachConnectionPort';
import type { EachConnectionPrivacyPassphrase } from './EachConnectionPrivacyPassphrase';
import type { EachConnectionPrivacyProtocol } from './EachConnectionPrivacyProtocol';
import type { EachConnectionPrivilegedAuthentication } from './EachConnectionPrivilegedAuthentication';
import type { EachConnectionPrivilegedPassword } from './EachConnectionPrivilegedPassword';
import type { EachConnectionSecurityLevelProperty } from './EachConnectionSecurityLevelProperty';
import type { EachConnectionType } from './EachConnectionType';
import type { EachConnectionUpdatedTime } from './EachConnectionUpdatedTime';
import type { EachConnectionUpdater } from './EachConnectionUpdater';
import type { EachConnectionUriQuery } from './EachConnectionUriQuery';
import type { EachConnectionUsername } from './EachConnectionUsername';

export interface EachConnection {
  id: string;
  name: string;
  description?: EachConnectionDescription;
  type: EachConnectionType;
  port?: EachConnectionPort;
  authentication_type?: EachConnectionAuthenticationTypeProperty;
  authenticate_required?: EachConnectionAuthenticateRequired;
  privileged_authentication?: EachConnectionPrivilegedAuthentication;
  uri_query?: EachConnectionUriQuery;
  username?: EachConnectionUsername;
  password?: EachConnectionPassword;
  privileged_password?: EachConnectionPrivilegedPassword;
  security_level?: EachConnectionSecurityLevelProperty;
  authentication_protocol?: EachConnectionAuthenticationProtocol;
  privacy_protocol?: EachConnectionPrivacyProtocol;
  privacy_passphrase?: EachConnectionPrivacyPassphrase;
  creator: string;
  created_time: string;
  updater?: EachConnectionUpdater;
  updated_time?: EachConnectionUpdatedTime;
}
